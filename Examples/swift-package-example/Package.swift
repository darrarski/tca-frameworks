// swift-tools-version: 5.10
import PackageDescription

let package = Package(
  name: "swift-package-example",
  platforms: [
    .iOS(.v17),
    .macOS(.v14),
  ],
  products: [
    .library(name: "Example", targets: ["Example"]),
  ],
  targets: [
    .target(
      name: "Example",
      dependencies: [
        //.target(name: "ArgumentParser"),
        //.target(name: "ArgumentParserToolInfo"),
        //.target(name: "Benchmark"),
        .target(name: "CasePaths"),
        //.target(name: "Clocks"),
        .target(name: "CombineSchedulers"),
        .target(name: "ComposableArchitecture"),
        .target(name: "ConcurrencyExtras"),
        .target(name: "CustomDump"),
        .target(name: "Dependencies"),
        //.target(name: "DependenciesMacros"),
        .target(name: "IdentifiedCollections"),
        //.target(name: "InlineSnapshotTesting"),
        //.target(name: "MacroTesting"),
        .target(name: "OrderedCollections"),
        .target(name: "Perception"),
        //.target(name: "SnapshotTesting"),
        //.target(name: "SwiftBasicFormat"),
        //.target(name: "SwiftCompilerPlugin"),
        //.target(name: "SwiftCompilerPluginMessageHandling"),
        //.target(name: "SwiftDiagnostics"),
        //.target(name: "SwiftOperators"),
        //.target(name: "SwiftParser"),
        //.target(name: "SwiftParserDiagnostics"),
        //.target(name: "SwiftSyntax"),
        //.target(name: "SwiftSyntax509"),
        //.target(name: "SwiftSyntax510"),
        //.target(name: "SwiftSyntaxBuilder"),
        //.target(name: "SwiftSyntaxMacroExpansion"),
        //.target(name: "SwiftSyntaxMacros"),
        //.target(name: "SwiftSyntaxMacrosTestSupport"),
        .target(name: "SwiftUINavigationCore"),
        .target(name: "XCTestDynamicOverlay"),
        .target(name: "_CollectionsUtilities"),
        //.target(name: "_SwiftSyntaxTestSupport"),
      ],
      swiftSettings: [
        .unsafeFlags([
          "-load-plugin-executable", "../../Macros/ComposableArchitectureMacros#ComposableArchitectureMacros",
          //"-load-plugin-executable", "../tca-frameworks/Macros/DependenciesMacrosPlugin#DependenciesMacrosPlugin",
          "-load-plugin-executable", "../../Macros/PerceptionMacros#PerceptionMacros",
          "-load-plugin-executable", "../../Macros/CasePathsMacros#CasePathsMacros",
        ]),
      ]
    ),
    .testTarget(
      name: "ExampleTests",
      dependencies: [
        .target(name: "Example"),
      ]
    ),
    //.binaryTarget(name: "ArgumentParser", path: "../../Frameworks/ArgumentParser.xcframework"),
    //.binaryTarget(name: "ArgumentParserToolInfo", path: "../../Frameworks/ArgumentParserToolInfo.xcframework"),
    //.binaryTarget(name: "Benchmark", path: "../../Frameworks/Benchmark.xcframework"),
    .binaryTarget(name: "CasePaths", path: "../../Frameworks/CasePaths.xcframework"),
    //.binaryTarget(name: "Clocks", path: "../../Frameworks/Clocks.xcframework"),
    .binaryTarget(name: "CombineSchedulers", path: "../../Frameworks/CombineSchedulers.xcframework"),
    .binaryTarget(name: "ComposableArchitecture", path: "../../Frameworks/ComposableArchitecture.xcframework"),
    .binaryTarget(name: "ConcurrencyExtras", path: "../../Frameworks/ConcurrencyExtras.xcframework"),
    .binaryTarget(name: "CustomDump", path: "../../Frameworks/CustomDump.xcframework"),
    .binaryTarget(name: "Dependencies", path: "../../Frameworks/Dependencies.xcframework"),
    //.binaryTarget(name: "DependenciesMacros", path: "../../Frameworks/DependenciesMacros.xcframework"),
    .binaryTarget(name: "IdentifiedCollections", path: "../../Frameworks/IdentifiedCollections.xcframework"),
    //.binaryTarget(name: "InlineSnapshotTesting", path: "../../Frameworks/InlineSnapshotTesting.xcframework"),
    //.binaryTarget(name: "MacroTesting", path: "../../Frameworks/MacroTesting.xcframework"),
    .binaryTarget(name: "OrderedCollections", path: "../../Frameworks/OrderedCollections.xcframework"),
    .binaryTarget(name: "Perception", path: "../../Frameworks/Perception.xcframework"),
    //.binaryTarget(name: "SnapshotTesting", path: "../../Frameworks/SnapshotTesting.xcframework"),
    //.binaryTarget(name: "SwiftBasicFormat", path: "../../Frameworks/SwiftBasicFormat.xcframework"),
    //.binaryTarget(name: "SwiftCompilerPlugin", path: "../../Frameworks/SwiftCompilerPlugin.xcframework"),
    //.binaryTarget(name: "SwiftCompilerPluginMessageHandling", path: "../../Frameworks/SwiftCompilerPluginMessageHandling.xcframework"),
    //.binaryTarget(name: "SwiftDiagnostics", path: "../../Frameworks/SwiftDiagnostics.xcframework"),
    //.binaryTarget(name: "SwiftOperators", path: "../../Frameworks/SwiftOperators.xcframework"),
    //.binaryTarget(name: "SwiftParser", path: "../../Frameworks/SwiftParser.xcframework"),
    //.binaryTarget(name: "SwiftParserDiagnostics", path: "../../Frameworks/SwiftParserDiagnostics.xcframework"),
    //.binaryTarget(name: "SwiftSyntax", path: "../../Frameworks/SwiftSyntax.xcframework"),
    //.binaryTarget(name: "SwiftSyntax509", path: "../../Frameworks/SwiftSyntax509.xcframework"),
    //.binaryTarget(name: "SwiftSyntax510", path: "../../Frameworks/SwiftSyntax510.xcframework"),
    //.binaryTarget(name: "SwiftSyntaxBuilder", path: "../../Frameworks/SwiftSyntaxBuilder.xcframework"),
    //.binaryTarget(name: "SwiftSyntaxMacroExpansion", path: "../../Frameworks/SwiftSyntaxMacroExpansion.xcframework"),
    //.binaryTarget(name: "SwiftSyntaxMacros", path: "../../Frameworks/SwiftSyntaxMacros.xcframework"),
    //.binaryTarget(name: "SwiftSyntaxMacrosTestSupport", path: "../../Frameworks/SwiftSyntaxMacrosTestSupport.xcframework"),
    .binaryTarget(name: "SwiftUINavigationCore", path: "../../Frameworks/SwiftUINavigationCore.xcframework"),
    .binaryTarget(name: "XCTestDynamicOverlay", path: "../../Frameworks/XCTestDynamicOverlay.xcframework"),
    .binaryTarget(name: "_CollectionsUtilities", path: "../../Frameworks/_CollectionsUtilities.xcframework"),
    //.binaryTarget(name: "_SwiftSyntaxTestSupport", path: "../../Frameworks/_SwiftSyntaxTestSupport.xcframework"),
  ]
)
